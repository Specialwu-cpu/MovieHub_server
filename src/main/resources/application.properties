server.port=8080

table.schema=MovieHub

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://ruanzaisheng.com:3306/MovieHub?useUnicode=true&characterEncoding=utf-8&useSSL=false&&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=wsh
spring.datasource.password=MovieHub666!
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.configuration.call-setters-on-nulls=true
#spring.jpa.hibernate.ddl-auto=create-drop
# ??hibernate statistics?????session???????
# Turn on hibernate statistics for information such as session, connection, and logging:
spring.jpa.properties.hibernate.generate_statistics=false
# Format the SQL
spring.jpa.properties.hibernate.format_sql= true
spring.jpa.database-platform= org.hibernate.dialect.MySQLDialect
# show SQL
spring.jpa.properties.hibernate.show_sql= true
## add SQL-related comment information
#spring.jpa.properties.hibernate.use_sql_comments= true
## hbm2ddl ??? validate, update, create, create-drop, none?????? validate?
## ??????????????????????????????????????????????
## HBM2DDL's policy validate, update, create, create-drop, none, is recommended to validate
## so that we know if the table structure of the production database is correct when we start the project
## rather than having to wait until run time to discover the problem.
#spring.jpa.properties.hibernate.hbm2ddl.auto=validate
## Association relationship when taking the depth of data, the default is 3 levels, we can be set to 2 levels
## to prevent other development misuse, improve SQL performance
#spring.jpa.properties.hibernate.max_fetch_depth=2
## ?? fetch ???? -1
## The batch fetch size defaults to -1
#spring.jpa.properties.hibernate.default_batch_fetch_size=100
## ?????????? flush ??????? db ??????? true
## Whether or not the transaction is flush before it completes, i. e. Syncing into the DB, is true by default
#spring.jpa.properties.hibernate.transaction.flush_before_completion=true
## ?????????? session??? false
## Whether to close the session after the transaction ends, default false
#spring.jpa.properties.hibernate.transaction.auto_close_session=false
## ????????????????????? batch size ? 15????????????????????????????
## Sometimes not only batch query, but also batch update, the default batch size is 15
## we can freely adjust according to the actual situation, can improve the efficiency of batch update;
#spring.jpa.properties.hibernate.jdbc.batch_size=100
## ???? insert sql ????
## Enable on-demand insert SQL reassembly
#spring.jpa.properties.hibernate.order_inserts=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
